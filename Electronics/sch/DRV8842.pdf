%!PS-Adobe-3.0
%%Creator: gEDA gschem 1.8.1-20121123-13-g875406c
%%CreationDate: Tue Mar 31 04:13:56 2020
%%Title: /home/shyam/rotibot/OSS_Pcb/schematics/DRV8842.sch
%%Author: shyam
%%BoundingBox: 0 0 595 841
%%Orientation: Landscape
%%Pages: 1
%%EndComments
%%BeginProlog
% Prolog for gEDA, define all the functions needed for rendering
% schematics on Postscript devices


% Draw a line from the second coordinate to the first
% x2 y2 x1 y1 width line -
/line {
    setlinewidth
    % pop off first element and moveto
    moveto
    % pop off remaining elements and draw a line segment
    lineto
    % draw it
    stroke
} bind def


% Draw a dot
% x y r dot -
/dot {
    0 360 arc fill
} bind def

% Draw a dot-dashed line, a bunch of lined segments,
% if the array element only has length two, draw a dot.
% [ [x2 y2 x1 y1] [x4 y4 x3 y3] [x5 y5] ... ] width dashed -
/width 0 def
/dashed {
    dup 2.0 div /width exch def
    setlinewidth
    % pop off each line segment and draw it as a dot or as a line
    {
	aload length 2 gt
	{ moveto lineto stroke}
	{ width dot } ifelse
    } forall
} bind def

% Draw an arc segment
% x y r ang1 ang2 width darc -
/darc {
    setlinewidth
    arc stroke
} bind def

% Draw a series of arc segment bits, if the array element only has a single
% element in it, draw a dot.
% [ [sa1 ea1] [sa2 ea2] ... ] x y r width dashedarc -
/x 0 def
/y 0 def
/dashedarc {
    dup /width exch def
    setlinewidth
    /r exch def  
    /y exch def
    /x exch def
    { aload length 1 gt
	{
	    % this element had two angles in it
	    % extract start and stop angles
	    x y r   % drop x y and r onto stack
		    % at this point we have: sa ea x y r
		    % we need                      x y r sa ea
		    % so..
	    5 -2 roll
	    % and add it to the current path, and draw it
	    arc stroke
	} {
	    % this element only had one angle in it, place a
	    % filled dot at the appropriate place
	    % compute center point of the arc using the angle
	    % that is on the top of the stack
	    dup   		% angle angle
	    cos r mul x add 	% angle x
	    exch		% x angle
	    sin r mul y add	% x y
	    width		% x y width/2
	    dot			% draw the dot
	} ifelse
    } forall

    % Now draw it
    stroke
} bind def

% Draw a box
% width height x y linethickness box -
/box {
    setlinewidth
    moveto
    exch dup 0 rlineto	 % w h, h w w 0      -- Draw bottom line
    exch 0 exch rlineto	 % h w, w h 0, w 0 h -- Draw right line 
    neg 0 rlineto	 % w, -w 0           -- Draw Top line
    closepath		 % finish and draw it
    stroke
} bind def			     

% Draw a filled box
% width height x y fbox -
/fbox {
    moveto
    exch dup 0 rlineto	
    exch 0 exch rlineto	
    neg 0 rlineto		
    closepath			
    fill			
} bind def

% Font reincoding utilities

% ISOLatin1Encoding, extended with remaining uncoded glyphs
/ISOLatin1Extended [
    /.notdef /Lslash /lslash /OE /oe /Scaron /scaron /Zcaron /zcaron
    /Ydieresis /trademark /bullet /dagger /daggerdbl /ellipsis /emdash
    /endash /fi /fl /florin /fraction /guilsinglleft /guilsinglright
    /perthousand /quotedblbase /quotedblleft /quotedblright
    /quotesinglbase /quotesingle /.notdef /.notdef /.notdef /space
    /exclam /quotedbl /numbersign /dollar /percent /ampersand
    /quoteright /parenleft /parenright /asterisk /plus /comma /minus
    /period /slash /zero /one /two /three /four /five /six /seven /eight
    /nine /colon /semicolon /less /equal /greater /question /at /A /B /C
    /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z
    /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s
    /t /u /v /w /x /y /z /braceleft /bar /braceright /asciitilde
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /dotlessi /grave /acute /circumflex
    /tilde /macron /breve /dotaccent /dieresis /.notdef /ring /cedilla
    /.notdef /hungarumlaut /ogonek /caron /space /exclamdown /cent
    /sterling /currency /yen /brokenbar /section /dieresis /copyright
    /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
    /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown /Agrave /Aacute
    /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute
    /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth
    /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
    /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
    /ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave
    /iacute /icircumflex /idieresis /eth /ntilde /ograve /oacute
    /ocircumflex /otilde /odieresis /divide /oslash /ugrave /uacute
    /ucircumflex /udieresis /yacute /thorn /ydieresis
] def

% `new-font-name' `encoding-vector' `old-font-name' RE -
/RE {
    findfont
    dup maxlength dict begin {
        1 index /FID ne { def } { pop pop } ifelse
    } forall
    /Encoding exch def
    dup /FontName exch def
    currentdict end definefont pop
} bind def

% Text handling functions, select the font and scale it, then we need
% only to apply the appropriate transformations to get the text
% justified into the right spots.  The bad thing here is that we don't
% do any kerning, so the output may look a bit strange.

% compute the height of one character and return lly and ury
% (char) charheight lly ury
/charheight {
    gsave			% push graphics state
	newpath			% clear current path
	0 0 moveto		% Set current point
	false charpath		% get path
	flattenpath		% flatten path
	pathbbox		% stack = llx lly urx ury
	exch pop		% stack = llx lly ury
	3 -1 roll pop		% stack = lly ury
    grestore			% pop graphics state
} bind def

% compute the height of a string, one character at a time
% (string) stringheight lly ury
/lly 0.0 def
/ury 0.0 def

/stringheight {
    /lly 0.0 def			% initial value of heightmin
    /ury 0.0 def			% initial value of heightmax
    {				% work through string
	( ) dup 0 4 -1 roll put	% create one character string
	charheight		% measure it's height
	dup ury gt {		% if ury gt heightmax
	    /ury exch def	% update with new value
	} {
	    pop			% else discard ury
	} ifelse
	dup lly lt {		% if lly lt heightmin
	    /lly exch def	% update with new value
	} {
	    pop			% else discard lly
	} ifelse
    } forall
    lly ury			% Return the results
} bind def

% calculate the string width taking into account the escapes.
/mystrx 0.0 def
/mystry 0.0 def
/mystresc false def

/mystringwidth {
    /mystrx 0.0 def
    /mystry 0.0 def
    /mystresc false def
    {				% work through string
	% did we process the escape character last?
	mystresc {
	    % last character was escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
		% toggle drawing overbars
		0.0 0.0 % make it like it never happened...
	    } {
		% otherwise measure the character 
		(\\ ) dup 1 4 -1 roll put % count a \ and the character
		stringwidth
	    } ifelse
	    % and reset the flag
	    /mystresc false def
	} {
	    % last character was not escape
	    % is this escape
	    dup 92 eq {
		% yes, escape character, set flag
		/mystresc true def
		pop % drop character
		0.0 0.0 % make like this character has no width and height
	    } {
		( ) dup 0 4 -1 roll put	% create one character string
		stringwidth		% measure it's height/width
	    } ifelse
	} ifelse
	% accumulate x and y movements
	mystry add /mystry exch def
	mystrx add /mystrx exch def
    } forall
    mystrx mystry % drop results on stack
} bind def

% Render a string with overbars
%
/escaped false def
/drawoverbar false def
/fontsize 0.0 def

%string1 string2 append -
/append {
    2 copy length exch length add % find new length
    string dup % string1 string2 string string
    4 2 roll % string string string1 string2
    2 index 0 3 index
    % string string string1 string2 string 0 string1
    putinterval % string string string1 string2
    exch length exch putinterval
} bind def

% If drawoverbar is set, draw a line of the same length as the given string
% string overbarshowline -
/overbarshowline {
    % print overbar if necessary
    stringwidth pop 0
    drawoverbar {
        rlineto
        gsave stroke grestore
    } {
        rmoveto
    } ifelse
} bind def

% Draws overbars for the given string, then shows the string itself
% string overbarshow
/overbarshow {
    /overbarshowacc () def
    /overbarshowtxt () def

    gsave
    fontsize 10.0 div setlinewidth
    0 fontsize rmoveto  % move to (0,overbarheight)

    {				% work through string
	escaped {
	    % the last character was the escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
                overbarshowacc overbarshowline
                % toggle drawing overbars
		/drawoverbar drawoverbar not def

                % Append the contents off the accumulator to the text
                % string we're eventually going to show
                /overbarshowtxt overbarshowtxt overbarshowacc append def

                % clear accumulator
                /overbarshowacc () def
	    } {
                % add to accumulator
                (\\ ) dup 1 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	    % and reset the flag
	    /escaped false def
	} {
	    % check for escape character \ = 92
	    dup 92 eq {
		% yes, escape character, set flag
		/escaped true def
		pop % drop character
	    } {
                % add to accumulator
                ( ) dup 0 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	} ifelse
    } forall
    % Catch any leftovers
    overbarshowacc overbarshowline
    overbarshowtxt overbarshowacc append

    grestore
    show
} bind def

% 
% hcenter rjustify vcenter vjustify spacing [(line1) (line2) ... ] rot x y size text -
/stringw 0.0 def
/stringh 0.0 def
/spacing 0.0 def
/strings [ ] def
/stringtxt ( ) def
/stringcount 0 def
/rot 0.0 def

/text {
    gsave	        % save state for later
    /drawoverbar false def      % start by not drawing overbars

    dup /fontsize exch def  % save font size for corrections later
    % do font selection 
    /gEDAFont findfont
    exch scalefont
    setfont

    % set up coordinates
    translate           % move origin to given point
    rotate		% rotate so that text is drawn
    0 0 moveto
    dup length /stringcount exch def			% Get number of strings
    /strings exch def     				% save strings
    /spacing exch def
    % do we have more than 1 string to render?
    stringcount 1 eq {
	/stringtxt strings aload pop def		% get the string 
	/stringw stringtxt mystringwidth pop neg def	% get the -width
	/stringh stringtxt stringheight exch pop neg def% get the -height

	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh rmoveto } if 
	% vertical center
	{ 0 stringh 0.3571425 mul rmoveto } if  % not 0.5, so that
						% it looks nicer
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% Draw the text
	stringtxt overbarshow
    } {
	% More than one line, compute bounding box for the text

	% vertical height, don't use the actual hieght of the characters
	% assume that the user wants to make the baselines line up with two
	% text boxes placed side by side
	/stringh stringcount spacing mul neg def
	% Now figure out horizontal size, this amounts to keeping track
	% of the longest string
	/stringw 0.0 def
	strings {
	    mystringwidth pop
	    dup stringw gt {
		/stringw exch def
	    } {
		pop
	    } ifelse
	} forall
	/stringw stringw neg def 	% get the -width
	
	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh fontsize add rmoveto } if 
	% vertical center
	{ 0 stringh 0.5 mul rmoveto } if 
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% now move up to the first line and begin rendering
	0 stringcount 1 sub spacing mul rmoveto
	strings {
	    gsave		% Save starting point
	    overbarshow		% render the text
	    grestore
	    0 spacing neg rmoveto
	} forall
    } ifelse
    grestore 	% Restore old state
} bind def


%%EndProlog
%%Page: 1 1
/gEDAFont ISOLatin1Extended /Helvetica RE
2 setlinecap
0.072000 0.072000 scale
7894 922 translate 90 rotate
0.835860 0.835860 scale
-36513 -42010 translate
gsave
41600 44000 43500 44000 10 line
43500 44000 43500 50700 10 line
43500 50700 41600 50700 10 line
41600 50700 41600 44000 10 line
41300 47100 41600 47100 10 line
gsave
false false false false 202.222224 [(OUT2) ] 0 41655 46995 180.555557 text
grestore
gsave
false true false false 202.222224 [(8) ] 0 41505 47145 180.555557 text
grestore
41300 46600 41600 46600 10 line
gsave
false false false false 202.222224 [(ISEN) ] 0 41655 46595 180.555557 text
grestore
gsave
false true false false 202.222224 [(9) ] 0 41505 46645 180.555557 text
grestore
41300 46100 41600 46100 10 line
gsave
false false false false 202.222224 [(OUT1) ] 0 41655 46095 180.555557 text
grestore
gsave
false true false false 202.222224 [(10) ] 0 41505 46145 180.555557 text
grestore
41300 45600 41600 45600 10 line
gsave
false false false false 202.222224 [(VM) ] 0 41655 45595 180.555557 text
grestore
gsave
false true false false 202.222224 [(11) ] 0 41505 45645 180.555557 text
grestore
41300 45100 41600 45100 10 line
gsave
false false false false 202.222224 [(VREF) ] 0 41655 45095 180.555557 text
grestore
gsave
false true false false 202.222224 [(12) ] 0 41505 45145 180.555557 text
grestore
41300 44600 41600 44600 10 line
gsave
false false false false 202.222224 [(VREF) ] 0 41655 44595 180.555557 text
grestore
gsave
false true false false 202.222224 [(13) ] 0 41505 44645 180.555557 text
grestore
41300 44100 41600 44100 10 line
gsave
false false false false 202.222224 [(GND) ] 0 41655 44095 180.555557 text
grestore
gsave
false true false false 202.222224 [(14) ] 0 41505 44145 180.555557 text
grestore
43800 47100 43500 47100 10 line
gsave
false true false false 202.222224 [(IN1) ] 0 43445 46995 180.555557 text
grestore
gsave
false false false false 202.222224 [(21) ] 0 43595 47145 180.555557 text
grestore
43800 46600 43500 46600 10 line
gsave
false true false false 202.222224 [(IN2) ] 0 43445 46595 180.555557 text
grestore
gsave
false false false false 202.222224 [(20) ] 0 43595 46645 180.555557 text
grestore
43800 46100 43500 46100 10 line
gsave
false true false false 202.222224 [(DECAY) ] 0 43445 46095 180.555557 text
grestore
gsave
false false false false 202.222224 [(19) ] 0 43595 46145 180.555557 text
grestore
43800 45600 43500 45600 10 line
gsave
false true false false 202.222224 [(nFAULT) ] 0 43445 45595 180.555557 text
grestore
gsave
false false false false 202.222224 [(18) ] 0 43595 45645 180.555557 text
grestore
43800 45100 43500 45100 10 line
gsave
false true false false 202.222224 [(nSLEEP) ] 0 43445 45095 180.555557 text
grestore
gsave
false false false false 202.222224 [(17) ] 0 43595 45145 180.555557 text
grestore
43800 44600 43500 44600 10 line
gsave
false true false false 202.222224 [(nRESET) ] 0 43445 44595 180.555557 text
grestore
gsave
false false false false 202.222224 [(16) ] 0 43595 44645 180.555557 text
grestore
43800 44100 43500 44100 10 line
gsave
false true false false 202.222224 [(V3P3OUT) ] 0 43445 44095 180.555557 text
grestore
gsave
false false false false 202.222224 [(15) ] 0 43595 44145 180.555557 text
grestore
gsave
false false false false 283.111104 [(DRV8842) ] 0 42000 47300 252.777771 text
grestore
41300 50600 41600 50600 10 line
gsave
false false false false 202.222224 [(CP1) ] 0 41655 50495 180.555557 text
grestore
gsave
false true false false 202.222224 [(1) ] 0 41505 50645 180.555557 text
grestore
41300 50100 41600 50100 10 line
gsave
false false false false 202.222224 [(CP2) ] 0 41655 50095 180.555557 text
grestore
gsave
false true false false 202.222224 [(2) ] 0 41505 50145 180.555557 text
grestore
41300 49600 41600 49600 10 line
gsave
false false false false 202.222224 [(VCP) ] 0 41655 49595 180.555557 text
grestore
gsave
false true false false 202.222224 [(3) ] 0 41505 49645 180.555557 text
grestore
41300 49100 41600 49100 10 line
gsave
false false false false 202.222224 [(VM) ] 0 41655 49095 180.555557 text
grestore
gsave
false true false false 202.222224 [(4) ] 0 41505 49145 180.555557 text
grestore
41300 48600 41600 48600 10 line
gsave
false false false false 202.222224 [(OUT1) ] 0 41655 48595 180.555557 text
grestore
gsave
false true false false 202.222224 [(5) ] 0 41505 48645 180.555557 text
grestore
41300 48100 41600 48100 10 line
gsave
false false false false 202.222224 [(ISEN) ] 0 41655 48095 180.555557 text
grestore
gsave
false true false false 202.222224 [(6) ] 0 41505 48145 180.555557 text
grestore
41300 47600 41600 47600 10 line
gsave
false false false false 202.222224 [(OUT2) ] 0 41655 47595 180.555557 text
grestore
gsave
false true false false 202.222224 [(7) ] 0 41505 47645 180.555557 text
grestore
43800 50600 43500 50600 10 line
gsave
false false false false 202.222224 [(28) ] 0 43595 50645 180.555557 text
grestore
gsave
false false false false 202.222224 [(GND) ] 0 43000 50500 180.555557 text
grestore
43800 50100 43500 50100 10 line
gsave
false true false false 202.222224 [(I4) ] 0 43445 50095 180.555557 text
grestore
gsave
false false false false 202.222224 [(27) ] 0 43595 50145 180.555557 text
grestore
43800 49600 43500 49600 10 line
gsave
false true false false 202.222224 [(I3) ] 0 43445 49595 180.555557 text
grestore
gsave
false false false false 202.222224 [(26) ] 0 43595 49645 180.555557 text
grestore
43800 49100 43500 49100 10 line
gsave
false true false false 202.222224 [(I2) ] 0 43445 49095 180.555557 text
grestore
gsave
false false false false 202.222224 [(25) ] 0 43595 49145 180.555557 text
grestore
43800 48600 43500 48600 10 line
gsave
false true false false 202.222224 [(I1) ] 0 43445 48595 180.555557 text
grestore
gsave
false false false false 202.222224 [(24) ] 0 43595 48645 180.555557 text
grestore
43800 48100 43500 48100 10 line
gsave
false true false false 202.222224 [(I0) ] 0 43445 48095 180.555557 text
grestore
gsave
false false false false 202.222224 [(23) ] 0 43595 48145 180.555557 text
grestore
43800 47600 43500 47600 10 line
gsave
false true false false 202.222224 [(NC) ] 0 43445 47595 180.555557 text
grestore
gsave
false false false false 202.222224 [(22) ] 0 43595 47645 180.555557 text
grestore
42300 43700 42300 44000 10 line
gsave
false true false true 202.222224 [(PAD) ] 0 42545 44200 180.555557 text
grestore
gsave
false false false true 202.222224 [(29) ] 0 42295 43950 180.555557 text
grestore
newpath
41300 47100
25
0 360 arc
fill
60 60 43770 47570 fbox
newpath
42300 43700
25
0 360 arc
fill
grestore
gsave
40400 50100 40400 50300 10 line
40400 51000 40400 50800 10 line
40200 50500 40600 50500 10 line
40200 50600 40600 50600 10 line
40400 50800 40400 50600 10 line
40400 50500 40400 50300 10 line
grestore
gsave
false true false true 202.222224 [(C15) ] 0 40700 50800 180.555557 text
grestore
gsave
false false false false 202.222224 [(0.01uF) ] 0 40400 50300 180.555557 text
grestore
41300 50100 40400 50100 10 line
40400 51000 41300 51000 10 line
41300 51000 41300 50600 10 line
41300 43700 41300 44100 10 line
43800 50600 44100 50600 10 line
41300 48100 40100 48100 10 line
40400 46600 41300 46600 10 line
gsave
39800 48200 39700 48000 10 line
39700 48000 39600 48200 10 line
39600 48200 39500 48000 10 line
39500 48000 39400 48200 10 line
39800 48200 39900 48000 10 line
39900 48000 39950 48100 10 line
40100 48100 39950 48100 10 line
39200 48100 39352 48100 10 line
39401 48200 39350 48100 10 line
grestore
gsave
false false false false 202.222224 [(R12) ] 0 39400 48300 180.555557 text
grestore
gsave
false false false false 202.222224 [(0R022) ] 0 39800 47800 180.555557 text
grestore
37900 45600 41300 45600 10 line
gsave
false false false false 202.222224 [(Vcc12v) ] 0 37900 45700 180.555557 text
grestore
37000 49100 41300 49100 10 line
gsave
false false false false 202.222224 [(Vcc12v) ] 0 36900 49200 180.555557 text
grestore
gsave
38300 48200 38300 48400 10 line
38300 49100 38300 48900 10 line
38100 48600 38500 48600 10 line
38100 48700 38500 48700 10 line
38300 48900 38300 48700 10 line
38300 48600 38300 48400 10 line
newpath
38300 49100
25
0 360 arc
fill
newpath
38300 49100
25
0 360 arc
fill
grestore
gsave
false true false true 202.222224 [(C16) ] 0 38700 48800 180.555557 text
grestore
gsave
false false false false 202.222224 [(0.1uF) ] 0 37800 48800 180.555557 text
grestore
gsave
37400 49100 37400 48900 10 line
gsave
false true false false 161.777776 [(1) ] 270 37450 48950 144.444443 text
grestore
37400 48200 37400 48400 10 line
gsave
false false false false 161.777776 [(2) ] 270 37450 48350 144.444443 text
grestore
37600 48700 37200 48700 10 line
37400 48400 37400 48600 10 line
37400 48700 37400 48900 10 line
37400 47900 700 75 105 10 darc
37600 48811 37500 48811 10 line
37549 48760 37549 48860 10 line
newpath
37400 49100
25
0 360 arc
fill
newpath
37400 49100
25
0 360 arc
fill
grestore
gsave
false false false false 202.222224 [(C14) ] 0 37600 48600 180.555557 text
grestore
gsave
false false false false 202.222224 [(100uF25V) ] 0 36500 48700 180.555557 text
grestore
41300 46100 39400 46100 10 line
gsave
false false false false 202.222224 [(out1) ] 0 39400 46200 180.555557 text
grestore
39400 48600 41300 48600 10 line
gsave
false false false false 202.222224 [(out1) ] 0 39400 48700 180.555557 text
grestore
gsave
39600 49700 39500 49500 10 line
39500 49500 39400 49700 10 line
39400 49700 39300 49500 10 line
39300 49500 39200 49700 10 line
39600 49700 39700 49500 10 line
39700 49500 39750 49600 10 line
39900 49600 39750 49600 10 line
39000 49600 39152 49600 10 line
39201 49700 39150 49600 10 line
newpath
39900 49600
25
0 360 arc
fill
newpath
39000 49600
25
0 360 arc
fill
newpath
39000 49600
25
0 360 arc
fill
grestore
gsave
false false false false 202.222224 [(R11) ] 0 39200 49700 180.555557 text
grestore
gsave
false false false false 202.222224 [(1M) ] 0 39600 49700 180.555557 text
grestore
gsave
39000 50200 39200 50200 10 line
39900 50200 39700 50200 10 line
39400 50400 39400 50000 10 line
39500 50400 39500 50000 10 line
39700 50200 39500 50200 10 line
39400 50200 39200 50200 10 line
grestore
gsave
false false false false 202.222224 [(C13) ] 0 39100 50300 180.555557 text
grestore
gsave
false false false false 202.222224 [(0.1uF) ] 0 39600 50300 180.555557 text
grestore
39900 49600 39900 50200 10 line
gsave
45300 43200 45300 43400 10 line
45300 44100 45300 43900 10 line
45100 43600 45500 43600 10 line
45100 43700 45500 43700 10 line
45300 43900 45300 43700 10 line
45300 43600 45300 43400 10 line
grestore
gsave
false true false true 202.222224 [(C19) ] 0 45600 43900 180.555557 text
grestore
gsave
false false false false 202.222224 [(0.47uF) ] 0 45400 43400 180.555557 text
grestore
gsave
44500 43800 44700 43700 10 line
44700 43700 44500 43600 10 line
44500 43600 44700 43500 10 line
44700 43500 44500 43400 10 line
44500 43800 44700 43900 10 line
44700 43900 44600 43950 10 line
44600 44100 44600 43950 10 line
44600 43200 44600 43352 10 line
44500 43401 44600 43350 10 line
newpath
44600 44100
25
0 360 arc
fill
newpath
44600 44100
25
0 360 arc
fill
newpath
44600 43200
25
0 360 arc
fill
grestore
gsave
false true false true 202.222224 [(R20) ] 0 44500 43700 180.555557 text
grestore
gsave
false false false false 202.222224 [(10k) ] 0 44700 43200 180.555557 text
grestore
gsave
44500 42900 44700 42800 10 line
44700 42800 44500 42700 10 line
44500 42700 44700 42600 10 line
44700 42600 44500 42500 10 line
44500 42900 44700 43000 10 line
44700 43000 44600 43050 10 line
44600 43200 44600 43050 10 line
44600 42300 44600 42452 10 line
44500 42501 44600 42450 10 line
newpath
44600 43200
25
0 360 arc
fill
newpath
44600 42300
25
0 360 arc
fill
newpath
44600 42300
25
0 360 arc
fill
grestore
gsave
false true false true 202.222224 [(R23) ] 0 44500 42800 180.555557 text
grestore
gsave
false false false false 202.222224 [(2k) ] 0 44700 42300 180.555557 text
grestore
40800 45100 41300 45100 10 line
40800 44600 41300 44600 10 line
43800 50100 46000 50100 10 line
gsave
false false false false 202.222224 [(I4_Arduino_ctrl) ] 0 44400 50200 180.555557 text
grestore
43800 49600 46000 49600 10 line
gsave
false false false false 202.222224 [(I3) ] 0 44400 49700 180.555557 text
grestore
43800 49100 46000 49100 10 line
gsave
false false false false 202.222224 [(I2) ] 0 44400 49200 180.555557 text
grestore
43800 48600 46000 48600 10 line
gsave
false false false false 202.222224 [(I1) ] 0 44400 48700 180.555557 text
grestore
43800 48100 46000 48100 10 line
gsave
false false false false 202.222224 [(I0) ] 0 44400 48200 180.555557 text
grestore
43800 47100 46000 47100 10 line
gsave
false false false false 202.222224 [(Arduino_motor_ctrl1) ] 0 43900 47200 180.555557 text
grestore
43800 46600 46000 46600 10 line
gsave
false false false false 202.222224 [(Arduino_motor_ctrl2) ] 0 43900 46700 180.555557 text
grestore
43800 45600 46000 45600 10 line
gsave
false false false false 202.222224 [(Arduino_motor_fault) ] 0 43900 45700 180.555557 text
grestore
43800 45100 46000 45100 10 line
43800 44600 46000 44600 10 line
gsave
false false false false 202.222224 [(Arduino_motor_reset) ] 0 43900 44700 180.555557 text
grestore
gsave
46600 45700 46500 45500 10 line
46500 45500 46400 45700 10 line
46400 45700 46300 45500 10 line
46300 45500 46200 45700 10 line
46600 45700 46700 45500 10 line
46700 45500 46750 45600 10 line
46900 45600 46750 45600 10 line
46000 45600 46152 45600 10 line
46201 45700 46150 45600 10 line
grestore
gsave
false false false false 202.222224 [(R19) ] 0 46200 45700 180.555557 text
grestore
gsave
false false false false 202.222224 [(10k) ] 0 46700 45700 180.555557 text
grestore
43800 44100 45300 44100 10 line
43800 46100 46000 46100 10 line
gsave
false false false false 202.222224 [(DECAY) ] 0 44800 46200 180.555557 text
grestore
gsave
44100 50400 44100 50600 10 line
44000 50400 44200 50400 10 line
44055 50350 44145 50350 10 line
44080 50310 44120 50310 10 line
grestore
42300 43700 41300 43700 10 line
gsave
42300 43500 42300 43700 10 line
42200 43500 42400 43500 10 line
42255 43450 42345 43450 10 line
42280 43410 42320 43410 10 line
newpath
42300 43700
25
0 360 arc
fill
grestore
40800 43200 44600 43200 10 line
gsave
44600 42100 44600 42300 10 line
44500 42100 44700 42100 10 line
44555 42050 44645 42050 10 line
44580 42010 44620 42010 10 line
newpath
44600 42300
25
0 360 arc
fill
newpath
44600 42300
25
0 360 arc
fill
grestore
40800 42300 45300 42300 10 line
45300 42300 45300 43200 10 line
40800 43200 40800 45100 10 line
gsave
37900 48000 37900 48200 10 line
37800 48000 38000 48000 10 line
37855 47950 37945 47950 10 line
37880 47910 37920 47910 10 line
newpath
37900 48200
25
0 360 arc
fill
newpath
37900 48200
25
0 360 arc
fill
grestore
41300 49600 39900 49600 10 line
39000 50200 39000 49100 10 line
gsave
39200 47900 39200 48100 10 line
39100 47900 39300 47900 10 line
39155 47850 39245 47850 10 line
39180 47810 39220 47810 10 line
grestore
gsave
39900 44700 39900 44900 10 line
39900 45600 39900 45400 10 line
39700 45100 40100 45100 10 line
39700 45200 40100 45200 10 line
39900 45400 39900 45200 10 line
39900 45100 39900 44900 10 line
newpath
39900 45600
25
0 360 arc
fill
newpath
39900 45600
25
0 360 arc
fill
grestore
gsave
false true false true 202.222224 [(C17) ] 0 40200 45400 180.555557 text
grestore
gsave
false false false false 202.222224 [(0.1uF) ] 0 39900 44900 180.555557 text
grestore
gsave
39900 44500 39900 44700 10 line
39800 44500 40000 44500 10 line
39855 44450 39945 44450 10 line
39880 44410 39920 44410 10 line
grestore
gsave
40800 42300 40800 42500 10 line
40800 43200 40800 43000 10 line
40600 42700 41000 42700 10 line
40600 42800 41000 42800 10 line
40800 43000 40800 42800 10 line
40800 42700 40800 42500 10 line
newpath
40800 43200
25
0 360 arc
fill
grestore
gsave
false true false true 202.222224 [(C18) ] 0 41100 43000 180.555557 text
grestore
gsave
false false false false 202.222224 [(0.1uF) ] 0 40800 42500 180.555557 text
grestore
37400 48200 38300 48200 10 line
41300 47600 41300 47100 10 line
41300 47100 39400 47100 10 line
gsave
false false false false 202.222224 [(out2) ] 0 39400 47200 180.555557 text
grestore
40400 46600 40400 48100 10 line
gsave
46600 50200 46500 50000 10 line
46500 50000 46400 50200 10 line
46400 50200 46300 50000 10 line
46300 50000 46200 50200 10 line
46600 50200 46700 50000 10 line
46700 50000 46750 50100 10 line
46900 50100 46750 50100 10 line
46000 50100 46152 50100 10 line
46201 50200 46150 50100 10 line
grestore
gsave
false false false false 202.222224 [(R13) ] 0 45900 50200 180.555557 text
grestore
gsave
false false false false 202.222224 [(4k7) ] 0 46700 50200 180.555557 text
grestore
gsave
46600 49700 46500 49500 10 line
46500 49500 46400 49700 10 line
46400 49700 46300 49500 10 line
46300 49500 46200 49700 10 line
46600 49700 46700 49500 10 line
46700 49500 46750 49600 10 line
46900 49600 46750 49600 10 line
46000 49600 46152 49600 10 line
46201 49700 46150 49600 10 line
grestore
gsave
false false false false 202.222224 [(R14) ] 0 45900 49700 180.555557 text
grestore
gsave
false false false false 202.222224 [(NO_Mount_4.7k) ] 0 46700 49700 180.555557 text
grestore
gsave
46600 49200 46500 49000 10 line
46500 49000 46400 49200 10 line
46400 49200 46300 49000 10 line
46300 49000 46200 49200 10 line
46600 49200 46700 49000 10 line
46700 49000 46750 49100 10 line
46900 49100 46750 49100 10 line
46000 49100 46152 49100 10 line
46201 49200 46150 49100 10 line
grestore
gsave
false false false false 202.222224 [(R15) ] 0 45900 49200 180.555557 text
grestore
gsave
false false false false 202.222224 [(4k7) ] 0 46700 49200 180.555557 text
grestore
gsave
46600 47200 46500 47000 10 line
46500 47000 46400 47200 10 line
46400 47200 46300 47000 10 line
46300 47000 46200 47200 10 line
46600 47200 46700 47000 10 line
46700 47000 46750 47100 10 line
46900 47100 46750 47100 10 line
46000 47100 46152 47100 10 line
46201 47200 46150 47100 10 line
grestore
gsave
false false false false 202.222224 [(R16) ] 0 46100 47200 180.555557 text
grestore
gsave
false false false false 202.222224 [(NO_Mount_4.7k) ] 0 46700 47200 180.555557 text
grestore
gsave
46600 46700 46500 46500 10 line
46500 46500 46400 46700 10 line
46400 46700 46300 46500 10 line
46300 46500 46200 46700 10 line
46600 46700 46700 46500 10 line
46700 46500 46750 46600 10 line
46900 46600 46750 46600 10 line
46000 46600 46152 46600 10 line
46201 46700 46150 46600 10 line
grestore
gsave
false false false false 202.222224 [(R17) ] 0 46100 46700 180.555557 text
grestore
gsave
false false false false 202.222224 [(NO_Mount_4.7k) ] 0 46700 46700 180.555557 text
grestore
gsave
46600 46200 46500 46000 10 line
46500 46000 46400 46200 10 line
46400 46200 46300 46000 10 line
46300 46000 46200 46200 10 line
46600 46200 46700 46000 10 line
46700 46000 46750 46100 10 line
46900 46100 46750 46100 10 line
46000 46100 46152 46100 10 line
46201 46200 46150 46100 10 line
grestore
gsave
false false false false 202.222224 [(R18) ] 0 45900 46200 180.555557 text
grestore
gsave
false false false false 202.222224 [(4k7) ] 0 46700 46200 180.555557 text
grestore
gsave
46600 44700 46500 44500 10 line
46500 44500 46400 44700 10 line
46400 44700 46300 44500 10 line
46300 44500 46200 44700 10 line
46600 44700 46700 44500 10 line
46700 44500 46750 44600 10 line
46900 44600 46750 44600 10 line
46000 44600 46152 44600 10 line
46201 44700 46150 44600 10 line
grestore
gsave
false false false false 202.222224 [(R22) ] 0 46300 44700 180.555557 text
grestore
gsave
false false false false 202.222224 [(4k7) ] 0 46700 44700 180.555557 text
grestore
46900 50100 47700 50100 10 line
47700 45100 47700 50600 10 line
gsave
false false false false 202.222224 [(Vcc5v) ] 0 47800 50500 180.555557 text
grestore
46900 45600 47700 45600 10 line
46900 46100 47700 46100 10 line
46900 46600 47300 46600 10 line
46900 47100 47300 47100 10 line
46900 49100 47700 49100 10 line
46900 49600 47700 49600 10 line
gsave
46600 45200 46500 45000 10 line
46500 45000 46400 45200 10 line
46400 45200 46300 45000 10 line
46300 45000 46200 45200 10 line
46600 45200 46700 45000 10 line
46700 45000 46750 45100 10 line
46900 45100 46750 45100 10 line
46000 45100 46152 45100 10 line
46201 45200 46150 45100 10 line
grestore
gsave
false false false false 202.222224 [(R21) ] 0 46300 45200 180.555557 text
grestore
gsave
false false false false 202.222224 [(4k7) ] 0 46700 45200 180.555557 text
grestore
47700 45100 46900 45100 10 line
47700 44600 46900 44600 10 line
gsave
false false false false 202.222224 [(GND) ] 0 47400 44400 180.555557 text
grestore
47300 47100 47300 44600 10 line
newpath
41300 47100
25
0 360 arc
fill
60 60 43770 47570 fbox
newpath
42300 43700
25
0 360 arc
fill
newpath
40400 48100
25
0 360 arc
fill
gsave
[ -1.00 -0.00 0.00 -1.00 37900 45600 ] concat
newpath
-30 -30 moveto
-30 30 lineto
30 0 lineto
closepath
fill
grestore
newpath
39900 45600
25
0 360 arc
fill
gsave
[ -1.00 -0.00 0.00 -1.00 37000 49100 ] concat
newpath
-30 -30 moveto
-30 30 lineto
30 0 lineto
closepath
fill
grestore
newpath
38300 49100
25
0 360 arc
fill
newpath
37400 49100
25
0 360 arc
fill
newpath
39000 49100
25
0 360 arc
fill
newpath
38300 49100
25
0 360 arc
fill
newpath
38300 49100
25
0 360 arc
fill
newpath
37400 49100
25
0 360 arc
fill
newpath
37400 49100
25
0 360 arc
fill
gsave
[ -1.00 -0.00 0.00 -1.00 39400 46100 ] concat
newpath
-30 -30 moveto
-30 30 lineto
30 0 lineto
closepath
fill
grestore
gsave
[ -1.00 -0.00 0.00 -1.00 39400 48600 ] concat
newpath
-30 -30 moveto
-30 30 lineto
30 0 lineto
closepath
fill
grestore
newpath
39900 49600
25
0 360 arc
fill
newpath
39000 49600
25
0 360 arc
fill
newpath
39000 49600
25
0 360 arc
fill
newpath
39900 49600
25
0 360 arc
fill
newpath
44600 44100
25
0 360 arc
fill
newpath
44600 44100
25
0 360 arc
fill
newpath
44600 43200
25
0 360 arc
fill
newpath
44600 43200
25
0 360 arc
fill
newpath
44600 42300
25
0 360 arc
fill
newpath
44600 42300
25
0 360 arc
fill
newpath
40800 44600
25
0 360 arc
fill
newpath
40800 44600
25
0 360 arc
fill
gsave
[ 1.00 -0.00 0.00 1.00 46000 48600 ] concat
newpath
-30 -30 moveto
-30 30 lineto
30 0 lineto
closepath
fill
grestore
gsave
[ 1.00 -0.00 0.00 1.00 46000 48100 ] concat
newpath
-30 -30 moveto
-30 30 lineto
30 0 lineto
closepath
fill
grestore
newpath
44600 44100
25
0 360 arc
fill
newpath
42300 43700
25
0 360 arc
fill
newpath
42300 43700
25
0 360 arc
fill
newpath
40800 43200
25
0 360 arc
fill
newpath
44600 43200
25
0 360 arc
fill
newpath
44600 42300
25
0 360 arc
fill
newpath
44600 42300
25
0 360 arc
fill
newpath
44600 42300
25
0 360 arc
fill
newpath
44600 42300
25
0 360 arc
fill
newpath
40800 43200
25
0 360 arc
fill
newpath
40800 44600
25
0 360 arc
fill
newpath
37900 48200
25
0 360 arc
fill
newpath
37900 48200
25
0 360 arc
fill
newpath
39900 49600
25
0 360 arc
fill
newpath
39000 49100
25
0 360 arc
fill
newpath
39000 49100
25
0 360 arc
fill
newpath
39000 49600
25
0 360 arc
fill
newpath
39900 45600
25
0 360 arc
fill
newpath
39900 45600
25
0 360 arc
fill
newpath
40800 43200
25
0 360 arc
fill
newpath
37900 48200
25
0 360 arc
fill
newpath
41300 47100
25
0 360 arc
fill
newpath
41300 47100
25
0 360 arc
fill
gsave
[ -1.00 -0.00 0.00 -1.00 39400 47100 ] concat
newpath
-30 -30 moveto
-30 30 lineto
30 0 lineto
closepath
fill
grestore
newpath
40400 48100
25
0 360 arc
fill
newpath
40400 48100
25
0 360 arc
fill
newpath
47700 50100
25
0 360 arc
fill
newpath
47700 50100
25
0 360 arc
fill
gsave
[ 0.00 -1.00 1.00 0.00 47700 50600 ] concat
newpath
-30 -30 moveto
-30 30 lineto
30 0 lineto
closepath
fill
grestore
newpath
47700 50100
25
0 360 arc
fill
newpath
47700 45600
25
0 360 arc
fill
newpath
47700 46100
25
0 360 arc
fill
newpath
47700 49100
25
0 360 arc
fill
newpath
47700 49600
25
0 360 arc
fill
newpath
47700 45600
25
0 360 arc
fill
newpath
47700 45600
25
0 360 arc
fill
newpath
47700 46100
25
0 360 arc
fill
newpath
47700 46100
25
0 360 arc
fill
newpath
47300 46600
25
0 360 arc
fill
newpath
47300 46600
25
0 360 arc
fill
newpath
47700 49100
25
0 360 arc
fill
newpath
47700 49100
25
0 360 arc
fill
newpath
47700 49600
25
0 360 arc
fill
newpath
47700 49600
25
0 360 arc
fill
gsave
[ 1.00 -0.00 0.00 1.00 47700 44600 ] concat
newpath
-30 -30 moveto
-30 30 lineto
30 0 lineto
closepath
fill
grestore
newpath
47300 44600
25
0 360 arc
fill
newpath
47300 44600
25
0 360 arc
fill
newpath
47300 44600
25
0 360 arc
fill
newpath
47300 46600
25
0 360 arc
fill
showpage
%%End
